Lesson 2 notes: 

    ls $$$ lists all files
    ls -a $$$ lists all files including hidden files beginning with a period. 
    git init $$$ initializes a git repository. Does not create a commit. 
    git status $$$ shows files, the last commit and which files have changes. 
    git add $$$ followed by the file name $$$ adds the file to the staging area. 
        $$$ same as clicking the staging buttom on the version control sidepanel?
    

    Code VS version comtrol panel 
        "U" means untracked i.e. no commits. 
        "M" means Modified i.e. changed since the last commit
        There is also a "+" to stage files individually 


What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?